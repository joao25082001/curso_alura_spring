spring.datasource.url=jdbc:mysql://localhost/vitae
spring.datasource.username=root
spring.datasource.password=joaovitor


spring.jpa.show-sql = true
#caso queira retirar os comandos sql do terminal, sete a linha de cima para false
# Exibe mensagens de erro valores inválidos (400)
server.error.include-message=always
server.error.include-binding-errors=always


spring.jpa.defer-datasource-initilization = true

spring.jpa.properties.hibernate.format_sql = true
server.port = 8082
api.security.token.secret = ${JWT_SECRET:my-secret-key}
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username =servicosvitae@gmail.com
spring.mail.password = svkrzygywrpqkkwt
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


#rhapnpzpjetthekw
#svkr zygy wrpq kkwt




spring.jpa.hibernate.ddl-auto=update
#none: Essa opção desativa completamente a geração automática de esquema. O Hibernate não fará alterações no esquema do banco de dados.
#create: Essa opção cria o esquema toda vez que o aplicativo é iniciado, mas não o atualiza posteriormente. Isso significa que as tabelas serão recriadas do zero sempre que o aplicativo for reiniciado.
#validate: Essa opção valida o esquema existente com base nas entidades, mas não faz alterações. É útil para verificar se o esquema atual corresponde ao esperado pelo Hibernate.
#update: Essa opção, que você já mencionou, cria tabelas ausentes e atualiza o esquema conforme necessário para refletir as alterações nas entidades. Ela não exclui ou modifica tabelas existentes, apenas as altera conforme necessário.
#create-drop: Essa opção cria o esquema no início do aplicativo e o remove no final, geralmente útil para testes.

